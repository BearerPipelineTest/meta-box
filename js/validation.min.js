"use strict";function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _inherits(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function");a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,writable:!0,configurable:!0}}),b&&_setPrototypeOf(a,b)}function _setPrototypeOf(a,b){return _setPrototypeOf=Object.setPrototypeOf||function(a,b){return a.__proto__=b,a},_setPrototypeOf(a,b)}function _createSuper(a){var b=_isNativeReflectConstruct();return function(){var c,d=_getPrototypeOf(a);if(b){var e=_getPrototypeOf(this).constructor;c=Reflect.construct(d,arguments,e)}else c=d.apply(this,arguments);return _possibleConstructorReturn(this,c)}}function _possibleConstructorReturn(a,b){return b&&("object"===_typeof(b)||"function"==typeof b)?b:_assertThisInitialized(a)}function _assertThisInitialized(a){if(void 0===a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return a}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(a){return!1}}function _getPrototypeOf(a){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(a){return a.__proto__||Object.getPrototypeOf(a)},_getPrototypeOf(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),a}(function(a,b,c){'use strict';var d=/*#__PURE__*/function(){function b(c){_classCallCheck(this,b),this.$form=a(c),this.validationElements=this.$form.find(".rwmb-validation"),this.showAsterisks(),this.getSettings()}return _createClass(b,[{key:"init",value:function init(){this.$form.validate(this.settings)}},{key:"showAsterisks",value:function showAsterisks(){this.validationElements.each(function(){var b=a(this).data("validation");a.each(b.rules,function(b,c){if(c.required){var d=a("[name=\""+b+"\"]");d.length&&d.closest(".rwmb-input").siblings(".rwmb-label").find("label").append("<span class=\"rwmb-required\">*</span>")}})})}},{key:"getSettings",value:function getSettings(){this.settings={ignore:":not([class|=\"rwmb\"]:visible)",errorPlacement:function errorPlacement(a,b){a.appendTo(b.closest(".rwmb-input"))},errorClass:"rwmb-error",errorElement:"p",invalidHandler:this.invalidHandler.bind(this),submitHandler:this.submitHandler.bind(this)};// Gather all validation rules.
var b=this;this.validationElements.each(function(){a.extend(!0,b.settings,a(this).data("validation"))})}},{key:"invalidHandler",value:function invalidHandler(){this.showMessage();// Custom event for showing error fields inside tabs/hidden divs. Use setTimeout() to run after error class is added to inputs.
var a=this;setTimeout(function(){a.$form.trigger("after_validate")},200)}},{key:"showMessage",value:function showMessage(){a("#publish").removeClass("button-primary-disabled"),a("#ajax-loading").attr("style",""),a("#rwmb-validation-message").remove(),this.$form.before("<div id=\"rwmb-validation-message\" class=\"notice notice-error is-dismissible\"><p>"+c.message+"</p></div>")}},{key:"submitHandler",value:function submitHandler(a){"undefined"!=typeof tinyMCE&&tinyMCE.triggerSave(),a.submit()}}]),b}();var e=/*#__PURE__*/function(a){function b(){return _classCallCheck(this,b),d.apply(this,arguments)}_inherits(b,a);var d=_createSuper(b);return _createClass(b,[{key:"init",value:function init(){var a=this,b=wp.data.dispatch("core/editor"),c=b.savePost;// Reference original method.
// Change the editor method.
b.savePost=function(){a.$form.validate(a.settings),a.$form.valid()&&c()}}},{key:"showMessage",value:function showMessage(){wp.data.dispatch("core/notices").createErrorNotice(c.message,{id:"meta-box-validation",isDismissible:!0})}}]),b}(d);// Run on document ready.
a(function(){if(b.isGutenberg){var a=new e(".metabox-location-normal"),c=new e(".metabox-location-side");a.init(),c.init()}else{// Edit post, edit term, edit user, front-end form.
var f=new d("#post, #edittag, #your-profile, .rwmb-form");f.init()}})})(jQuery,rwmb,rwmbValidation);
